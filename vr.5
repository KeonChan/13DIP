# Importing the modules
from english_words import english_words_set  #This will import a list of English words
from tkinter import *  #Tkinter helps with creating the frames and define their attributes
import tkinter.font as font  #This added a variaety of fonts
import random  #This will be used to randomise the list of English words

#Creating the main window and adding size, title and color
window = Tk()
window.geometry('600x600')  #Set window size
window.title("Typing Test")  #Adding a title
window.config(bg='#ccc5b9')  #Set window colour

#Creating a frame to show the Test heading
heading1 = Frame(window, bg="#403d39", bd=5)
heading1.place(relx=0.2, rely=0.2, relwidth=0.6, relheight=0.16)
headingLabel1 = Label(heading1,
                      text="Welcome to Typing Test",
                      bg='#fffcf2',
                      fg='#252422',
                      font=('Impact', 17, 'bold'))
headingLabel1.place(relx=0, rely=0, relwidth=1, relheight=1) #Set the placement of the heading

#Creating a button to start the game. The startGame function, given as command parameter. The program runs when clicking the button
button1 = Button(window,
                 text="Start",
                 bg= '#eb5e28',
                 fg='#fffcf2',
                 width=20,
                 height=2,
                 font=('Impact', 15, 'bold'))
button1.place(relx=0.25, rely=0.4) #Set the placement of the button

window.mainloop()  #Runs the window till closed

#These are the main variables
score = 0
missed = 0
timer = 0
count = 0
word = list(english_words_set)

#Creating the game window
window2= Tk()
window2.geometry('700x600')
window2.title('Typing Test')
window2.config(bg='#fffcf2')

def timeFunc():
 global time,score,missed,count
 if(count<=10): # If count is less than 10, update the time
  time +=1
  timer.configure(text=time)
  timer.after(1000,timeFunc)
 else: #If count is equal to 10 then show the results, initialize the variables and destroy the other widgets
  #Label to show result after the game ends
  result= Label(wn,text='',font=('arial',25,'italic bold'),fg='grey')
  result.place(x=230,y=250)
  result.configure(text='Time taken = {} \n Score = {} \n Missed = {}'.format(time,score,count-score-1))
   
  missed=0
  score=0
  time=0
  count=0
  nextWord.destroy()
  userInput.destroy()
  scorelabel.destroy()
  scoreboard.destroy()
  timerlabel.destroy()
  timer.destroy()

def mainGame(event):
 global score, missed,count
 if time==0: 
  random.shuffle(words) #Shuffle the list words randomly
  nextWord.configure(text=words[0]) 
  userInput.delete(0,END) #Clear the user input
  timeFunc() 

 if userInput.get()== nextWord['text']: #Check if user entered correctly
  score +=1 #score +1
  scoreboard.configure(text=score) #Show the updated score
 count+=1 #Increase the count
  
 if(count<=10): #If count is less the 10
  random.shuffle(words) #Shuffle the list words randomly
  nextWord.configure(text=words[0])
  userInput.delete(0,END) #Clear the user input

#Creating a label to show the name of the project
label=Label(wn,text='Typing Tes',font=('arial',25,
           'italic bold'),fg='gray',width=40)
label.place(x=10,y=10)
#label to show the instruction initially and then to show the words to be typed
nextWord=Label(wn,text='Hit enter button to start and after typing the word',font=('arial',20,
            'italic bold'),fg='black')
nextWord.place(x=30,y=240)
#Label to show text ‘Your Score’
scorelabel=Label(wn,text='Your Score:',font=('arial',25,
           'italic bold'),fg='red')
scorelabel.place(x=10,y=100)
#Label to show score
scoreboard=Label(wn,text=score,font=('arial',25,
            'italic bold'),fg='blue')
scoreboard.place(x=100,y=180)
#Label to show text Time Elapsed
timerlabel=Label(wn,text='Time Elapsed:',font=('arial',25,
            'italic bold'),fg='red')
timerlabel.place(x=500,y=100)
#Label to show time
timer=Label(wn,text=time,font=('arial',25,
             'italic bold'),fg='blue')
timer.place(x=560,y=180)
#This widget takes the input from the user
userInput= Entry(wn,font=('arial',25,'italic bold'),bd=10,justify='center')
userInput.place(x=150,y=330)
userInput.focus_set()
wn.bind('<Return>',mainGame)#Runs the mainGame function every time the user presses enter button
wn.mainloop()#Runs the window till it is closed
